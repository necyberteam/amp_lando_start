name: 'Lando Start'
description: 'Spin up amp website'
inputs:
  GH_TOKEN_REPO:
    description: "PAT"
    required: true
  GITHUB_TOKEN:
    description: "Github token"
    required: true
  DATABASE:
    description: "Use specific backup"
    required: false

runs:
  using: "composite"
  steps:
    - name: Custom DATABASE
      run: echo "DATABASE=$( $DATABASE )" >> $GITHUB_ENV
      env:
        DATABASE: ${{ inputs.DATABASE }}
      shell: bash

    - name: Set lando version.
      run: echo "LANDO_VERSION=$(cat .github/lando_version.md)" >> $GITHUB_ENV
      shell: bash

    - name: Install Lando
      run: |
        echo 'docker compose --compatibility "$@"' > /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        
        echo "LANDO_VERSION=$(cat .github/lando_version.md)" >> $GITHUB_ENV
        bash -c "$(curl -fsSL https://get.lando.dev/setup-lando.sh)"
      shell: bash

    - name: Composer install
      run: |
        composer config -g github-oauth.github.com $gh_token
        composer install --ignore-platform-reqs --prefer-dist -n
      shell: bash
      env:
        gh_token: ${{ inputs.GH_TOKEN_REPO }}

    - name: Last Sunday date
      run: echo "LAST_SUNDAY=$(date -d "last Sunday" +%Y-%m-%d)" >> $GITHUB_ENV
      shell: bash

    - name: Todays date
      run: echo "DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV
      shell: bash

    - name: Spin up site
      run: |
        composer config -g github-oauth.github.com $gh_token_repo
        # Check for robo script in vendor/bin
        if [ -x "vendor/bin/robo" ]; then
          # robo script exists and is executable
          echo "Running robo landosetup..."
          vendor/bin/robo landosetup "$gh_token_repo" 1
        else
          # robo script not found, try composer
          echo "Running composer robo landosetup..."
          composer robo landosetup "$gh_token_repo" 1
        fi
      shell: bash
      env:
        gh_token_repo: ${{ inputs.GH_TOKEN_REPO }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Custom Database
      if: "${{ env.DATABASE != '' }}"
      run: |
        rm backups/site.sql.gz
        wget -O backups/site.sql.gz '$DATABASE'
        lando db-import backups/site.sql.gz
        lando drush sql-sanitize --sanitize-password -y
        lando drush cim
        lando drush cr
        lando drush updb
        lando drush user-create authenticated_test_user --mail="authenticated@amptesting.com" --password="6%l7iF}6(4tI"
        lando drush user-create administrator_test_user --mail="administrator@amptesting.com" --password="b8QW]X9h7#5n"
        lando drush user-add-role "administrator" administrator_test_user
        lando drush en amp_dev
        lando drush pmu amp_dev
        lando drush pmu symfony_mailer
        lando drush cr
      shell: bash

